{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/data.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../section-view/section-view.component\";\nimport * as i4 from \"../profile-view/profile-view.component\";\nimport * as i5 from \"../filter/filter.component\";\nfunction CvViewComponent_div_3_app_section_view_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-section-view\", 5);\n  }\n  if (rf & 2) {\n    const section_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"sectionData\", section_r3);\n  }\n}\nfunction CvViewComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵtemplate(1, CvViewComponent_div_3_app_section_view_1_Template, 1, 1, \"app-section-view\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const sections_r1 = ctx.ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", sections_r1);\n  }\n}\nexport class CvViewComponent {\n  constructor(dataService) {\n    this._dataService = dataService;\n  }\n  ngOnInit() {\n    this.profileData = this._dataService.getProfile();\n    this.sections$ = this._dataService.cvSections$;\n  }\n}\nCvViewComponent.ɵfac = function CvViewComponent_Factory(t) {\n  return new (t || CvViewComponent)(i0.ɵɵdirectiveInject(i1.DataService));\n};\nCvViewComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CvViewComponent,\n  selectors: [[\"app-cv-view\"]],\n  decls: 5,\n  vars: 4,\n  consts: [[1, \"cv-wrapper\"], [3, \"profileData\"], [\"class\", \"cv-section-list\", 4, \"ngIf\"], [1, \"cv-section-list\"], [\"class\", \"cv-section\", 3, \"sectionData\", 4, \"ngFor\", \"ngForOf\"], [1, \"cv-section\", 3, \"sectionData\"]],\n  template: function CvViewComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"app-profile-view\", 1)(2, \"app-filter\");\n      i0.ɵɵtemplate(3, CvViewComponent_div_3_Template, 2, 1, \"div\", 2);\n      i0.ɵɵpipe(4, \"async\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"profileData\", ctx.profileData);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(4, 2, ctx.sections$));\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.SectionViewComponent, i4.ProfileViewComponent, i5.FilterComponent, i2.AsyncPipe],\n  styles: [\".cv-wrapper[_ngcontent-%COMP%] {\\n  display: block;\\n  font-family: Roboto;\\n  background: var(--background-main);\\n}\\n\\n.cv-section-list[_ngcontent-%COMP%] {\\n  position: relative;\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n\\n.cv-section[_ngcontent-%COMP%] {\\n  --flex-direction: row;\\n  background-color: var(--background-main);\\n}\\n\\n.cv-section[_ngcontent-%COMP%]:nth-child(odd){\\n  --flex-direction: row-reverse;\\n  background-color: var(--background-alternate);\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY3Ytdmlldy9jdi12aWV3LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxjQUFjO0VBQ2QsbUJBQW1CO0VBQ25CLGtDQUFrQztBQUNwQzs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixhQUFhO0VBQ2Isc0JBQXNCO0FBQ3hCOzs7QUFHQTtFQUNFLHFCQUFxQjtFQUNyQix3Q0FBd0M7QUFDMUM7O0FBRUE7RUFDRSw2QkFBNkI7RUFDN0IsNkNBQTZDO0FBQy9DIiwic291cmNlc0NvbnRlbnQiOlsiLmN2LXdyYXBwZXIge1xuICBkaXNwbGF5OiBibG9jaztcbiAgZm9udC1mYW1pbHk6IFJvYm90bztcbiAgYmFja2dyb3VuZDogdmFyKC0tYmFja2dyb3VuZC1tYWluKTtcbn1cblxuLmN2LXNlY3Rpb24tbGlzdCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cblxuXG4uY3Ytc2VjdGlvbiB7XG4gIC0tZmxleC1kaXJlY3Rpb246IHJvdztcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYmFja2dyb3VuZC1tYWluKTtcbn1cblxuLmN2LXNlY3Rpb246bnRoLWNoaWxkKG9kZCl7XG4gIC0tZmxleC1kaXJlY3Rpb246IHJvdy1yZXZlcnNlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1iYWNrZ3JvdW5kLWFsdGVybmF0ZSk7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":";;;;;;;;IAMIA,sCAAkH;;;;IAA5CA,wCAAuB;;;;;IAD/FA,8BAAmE;IACjEA,gGAAkH;IACpHA,iBAAM;;;;IADqDA,eAAW;IAAXA,qCAAW;;;ACIxE,OAAM,MAAOC,eAAe;EAM1BC,YAAYC,WAAwB;IAClC,IAAI,CAACC,YAAY,GAAGD,WAAW;EACjC;EAEOE,QAAQ;IACb,IAAI,CAACC,WAAW,GAAG,IAAI,CAACF,YAAY,CAACG,UAAU,EAAE;IACjD,IAAI,CAACC,SAAS,GAAG,IAAI,CAACJ,YAAY,CAACK,WAAW;EAChD;;AAbWR,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAS;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDV5Bd,8BAAwB;MACtBA,sCAAiE;MAIjEA,gEAEM;;MAERA,iBAAM;;;MARcA,eAA2B;MAA3BA,6CAA2B;MAIvCA,eAAwB;MAAxBA,0DAAwB","names":["i0","CvViewComponent","constructor","dataService","_dataService","ngOnInit","profileData","getProfile","sections$","cvSections$","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/henrymarks/WebstormProjects/cvPage/src/app/cv-view/cv-view.component.html","/Users/henrymarks/WebstormProjects/cvPage/src/app/cv-view/cv-view.component.ts"],"sourcesContent":["<div class=\"cv-wrapper\">\n  <app-profile-view [profileData]=\"profileData\"></app-profile-view>\n\n  <app-filter></app-filter>\n\n  <div *ngIf=\"sections$ | async as sections\" class=\"cv-section-list\">\n    <app-section-view class=\"cv-section\" *ngFor=\"let section of sections\" [sectionData]=\"section\" ></app-section-view>\n  </div>\n\n</div>\n\n\n\n\n","import {Component, OnInit} from '@angular/core';\nimport {DataService} from \"../services/data.service\";\nimport {Observable} from \"rxjs\";\nimport {IFilter, IProfile, ISectionData} from \"../interfaces/cv-interfaces\";\n\n@Component({\n  selector: 'app-cv-view',\n  templateUrl: './cv-view.component.html',\n  styleUrls: ['./cv-view.component.css']\n})\nexport class CvViewComponent implements OnInit {\n  private _dataService: DataService;\n  public sections$: Observable<Array<ISectionData>>;\n  public profileData: IProfile;\n\n\n  constructor(dataService: DataService) {\n    this._dataService = dataService\n  }\n\n  public ngOnInit(): void {\n    this.profileData = this._dataService.getProfile();\n    this.sections$ = this._dataService.cvSections$;\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}