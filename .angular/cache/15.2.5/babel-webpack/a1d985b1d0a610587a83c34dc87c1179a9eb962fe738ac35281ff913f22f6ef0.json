{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/data.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../section-view/section-view.component\";\nimport * as i4 from \"../profile-view/profile-view.component\";\nimport * as i5 from \"../filter/filter.component\";\nfunction CvViewComponent_div_2_app_section_view_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-section-view\", 3);\n  }\n  if (rf & 2) {\n    const section_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"sectionData\", section_r3);\n  }\n}\nfunction CvViewComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, CvViewComponent_div_2_app_section_view_1_Template, 1, 1, \"app-section-view\", 2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const sections_r1 = ctx.ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", sections_r1);\n  }\n}\nexport class CvViewComponent {\n  constructor(dataService) {\n    this.fakeData = [{\n      sectionName: 'blah',\n      data: [{\n        title: 'firstJob',\n        organisation: 'firstOrg',\n        startDate: '2021-01-01',\n        endDate: '2022-02-02',\n        detailList: [{\n          description: 'asdadsdaasdadasd',\n          tags: ['technical', 'organisation']\n        }, {\n          description: 'basldjbasdkashdj',\n          tags: ['technical']\n        }, {\n          description: 'ccccccbsmdcshdbjshdbsg',\n          tags: ['teamwork']\n        }]\n      }]\n    }];\n    this.availableFilters = [{\n      value: 'technical',\n      active: false\n    }, {\n      value: 'organisation',\n      active: false\n    }, {\n      value: 'teamwork',\n      active: false\n    }];\n    this._activeFilters = [];\n    this.showFilterOptions = false;\n    this._dataService = dataService;\n  }\n  ngOnInit() {\n    this.profileData = this._dataService.getProfile();\n    this.sections$ = this._dataService.cvSections$;\n  }\n  toggleFilterActive(filter) {\n    filter.active = !filter.active;\n    if (filter.active) {\n      this._activeFilters.push(filter.value);\n    } else {\n      this._activeFilters = this._activeFilters.filter(value => value !== filter.value);\n    }\n  }\n  filter() {\n    this._dataService.filterData(this._activeFilters);\n    this.showFilterOptions = false;\n  }\n}\nCvViewComponent.ɵfac = function CvViewComponent_Factory(t) {\n  return new (t || CvViewComponent)(i0.ɵɵdirectiveInject(i1.DataService));\n};\nCvViewComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CvViewComponent,\n  selectors: [[\"app-cv-view\"]],\n  decls: 4,\n  vars: 4,\n  consts: [[3, \"profileData\"], [4, \"ngIf\"], [3, \"sectionData\", 4, \"ngFor\", \"ngForOf\"], [3, \"sectionData\"]],\n  template: function CvViewComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-profile-view\", 0)(1, \"app-filter\");\n      i0.ɵɵtemplate(2, CvViewComponent_div_2_Template, 2, 1, \"div\", 1);\n      i0.ɵɵpipe(3, \"async\");\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"profileData\", ctx.profileData);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(3, 2, ctx.sections$));\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.SectionViewComponent, i4.ProfileViewComponent, i5.FilterComponent, i2.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;;IAKEA,sCAA+F;;;;IAA5CA,wCAAuB;;;;;IAD5EA,2BAA2C;IACzCA,gGAA+F;IACjGA,iBAAM;;;;IADkCA,eAAW;IAAXA,qCAAW;;;ACKnD,OAAM,MAAOC,eAAe;EAkC1BC,YAAYC,WAAwB;IA/B7B,aAAQ,GAAwB,CAAG;MACxCC,WAAW,EAAE,MAAM;MACnBC,IAAI,EAAE,CACJ;QACEC,KAAK,EAAE,UAAU;QACjBC,YAAY,EAAE,UAAU;QACxBC,SAAS,EAAE,YAAY;QACvBC,OAAO,EAAE,YAAY;QACrBC,UAAU,EAAE,CACV;UACEC,WAAW,EAAE,kBAAkB;UAC/BC,IAAI,EAAE,CAAC,WAAW,EAAE,cAAc;SACnC,EACD;UACED,WAAW,EAAE,kBAAkB;UAC/BC,IAAI,EAAE,CAAC,WAAW;SACnB,EACD;UACED,WAAW,EAAE,wBAAwB;UACrCC,IAAI,EAAE,CAAC,UAAU;SAClB;OAGJ;KAEJ,CAAC;IAEK,qBAAgB,GAAmB,CAAC;MAACC,KAAK,EAAE,WAAW;MAAEC,MAAM,EAAE;IAAK,CAAC,EAAE;MAACD,KAAK,EAAE,cAAc;MAAEC,MAAM,EAAE;IAAK,CAAC,EAAE;MAACD,KAAK,EAAE,UAAU;MAAEC,MAAM,EAAE;IAAK,CAAC,CAAC;IACnJ,mBAAc,GAAkB,EAAE;IACnC,sBAAiB,GAAY,KAAK;IAGvC,IAAI,CAACC,YAAY,GAAGZ,WAAW;EACjC;EAEOa,QAAQ;IACb,IAAI,CAACC,WAAW,GAAG,IAAI,CAACF,YAAY,CAACG,UAAU,EAAE;IACjD,IAAI,CAACC,SAAS,GAAG,IAAI,CAACJ,YAAY,CAACK,WAAW;EAChD;EAEOC,kBAAkB,CAACC,MAAe;IACvCA,MAAM,CAACR,MAAM,GAAG,CAACQ,MAAM,CAACR,MAAM;IAC9B,IAAGQ,MAAM,CAACR,MAAM,EAAE;MAChB,IAAI,CAACS,cAAc,CAACC,IAAI,CAACF,MAAM,CAACT,KAAK,CAAC;KACvC,MACI;MACH,IAAI,CAACU,cAAc,GAAG,IAAI,CAACA,cAAc,CAACD,MAAM,CAAET,KAAa,IAAKA,KAAK,KAAIS,MAAM,CAACT,KAAK,CAAC;;EAE9F;EAEOS,MAAM;IACX,IAAI,CAACP,YAAY,CAACU,UAAU,CAAC,IAAI,CAACF,cAAc,CAAC;IACjD,IAAI,CAACG,iBAAiB,GAAG,KAAK;EAChC;;AAxDWzB,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAA0B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDV5B/B,sCAAiE;MAIjEA,gEAEM;;;;MANYA,6CAA2B;MAIvCA,eAAwB;MAAxBA,0DAAwB","names":["i0","CvViewComponent","constructor","dataService","sectionName","data","title","organisation","startDate","endDate","detailList","description","tags","value","active","_dataService","ngOnInit","profileData","getProfile","sections$","cvSections$","toggleFilterActive","filter","_activeFilters","push","filterData","showFilterOptions","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/henrymarks/WebstormProjects/cvPage/src/app/cv-view/cv-view.component.html","/Users/henrymarks/WebstormProjects/cvPage/src/app/cv-view/cv-view.component.ts"],"sourcesContent":["<app-profile-view [profileData]=\"profileData\"></app-profile-view>\n\n<app-filter></app-filter>\n\n<div *ngIf=\"sections$ | async as sections\">\n  <app-section-view *ngFor=\"let section of sections\" [sectionData]=\"section\" ></app-section-view>\n</div>\n\n\n\n","import {Component, OnInit} from '@angular/core';\nimport {DataService} from \"../services/data.service\";\nimport {Observable} from \"rxjs\";\nimport {IFilter, IProfile, ISectionData} from \"../interfaces/cv-interfaces\";\n\n@Component({\n  selector: 'app-cv-view',\n  templateUrl: './cv-view.component.html',\n  styleUrls: ['./cv-view.component.css']\n})\nexport class CvViewComponent implements OnInit {\n  private _dataService: DataService;\n  public sections$: Observable<Array<ISectionData>>;\n  public fakeData: Array<ISectionData> = [  {\n    sectionName: 'blah',\n    data: [\n      {\n        title: 'firstJob',\n        organisation: 'firstOrg',\n        startDate: '2021-01-01',\n        endDate: '2022-02-02',\n        detailList: [\n          {\n            description: 'asdadsdaasdadasd',\n            tags: ['technical', 'organisation']\n          },\n          {\n            description: 'basldjbasdkashdj',\n            tags: ['technical']\n          },\n          {\n            description: 'ccccccbsmdcshdbjshdbsg',\n            tags: ['teamwork']\n          }\n\n        ]\n      }\n    ]\n  }]\n  public profileData: IProfile;\n  public availableFilters: Array<IFilter> = [{value: 'technical', active: false}, {value: 'organisation', active: false}, {value: 'teamwork', active: false}]\n  private _activeFilters: Array<string> = []\n  public showFilterOptions: boolean = false;\n\n  constructor(dataService: DataService) {\n    this._dataService = dataService\n  }\n\n  public ngOnInit(): void {\n    this.profileData = this._dataService.getProfile();\n    this.sections$ = this._dataService.cvSections$;\n  }\n\n  public toggleFilterActive(filter: IFilter): void {\n    filter.active = !filter.active;\n    if(filter.active) {\n      this._activeFilters.push(filter.value)\n    }\n    else {\n      this._activeFilters = this._activeFilters.filter((value: string) => value !==filter.value);\n    }\n  }\n\n  public filter(): void {\n    this._dataService.filterData(this._activeFilters)\n    this.showFilterOptions = false;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}